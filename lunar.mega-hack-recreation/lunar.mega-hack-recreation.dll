#include <windows.h>#include <iostream>#include <vector>#include "hooking_library.h"  // Replace with MinHook or custom hook librarybool menuVisible = false;// Module Base Classclass Mod {public:    virtual void onEnable() = 0;    virtual void onDisable() = 0;    virtual void update() = 0;    bool enabled = false;};// Example Hacksclass NoClip : public Mod {public:    void onEnable() override {        // Disable collision detection        std::cout << "NoClip enabled" << std::endl;        *(bool*)noclipAddress = true;    }    void onDisable() override {        // Re-enable collision detection        std::cout << "NoClip disabled" << std::endl;        *(bool*)noclipAddress = false;    }    void update() override {        // Optional: continuously ensure NoClip is applied    }};class JumpHack : public Mod {public:    void onEnable() override {        // Increase jump height        *(float*)jumpHeightAddress = 10.0f;        std::cout << "Jump Hack enabled" << std::endl;    }    void onDisable() override {        // Reset jump height        *(float*)jumpHeightAddress = 2.0f;        std::cout << "Jump Hack disabled" << std::endl;    }    void update() override {        // Optional: ensure jump height is maintained    }};class UnlockAll : public Mod {public:    void onEnable() override {        //